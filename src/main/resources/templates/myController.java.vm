package ${package.Controller};


import ${package.Entity}.*;
import ${package.Entity}.VO.*;
import ${package.Entity}.DTO.*;
import $!{package.Service}.${table.serviceName} ;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import ${cfg.basePackage}.common.dto.IdDTO;
import ${cfg.basePackage}.common.dto.IdsDTO;
import ${cfg.basePackage}.common.vo.PageResult;
import ${cfg.basePackage}.common.vo.PageWrapper;
import ${cfg.basePackage}.common.vo.R;
import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;

##import com.baomidou.mybatisplus.core.metadata.IPage;


/**
 * $!{table.comment} ${entity}
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${table.entityPath}")
@Api(tags = "$!{table.comment}")
@RequiredArgsConstructor
public class ${table.controllerName} {

    private final ${table.serviceName}  ${table.entityPath}Service;

##    /**
##     * 根据Id获取单条
##     */
##    @ApiOperation(value = "根据Id获取单条")
##    @GetMapping("/getById")
##    public R<${entity}> getById(@RequestParam("id") Integer id) {
##        ${entity} data = ${table.entityPath}Service.getById(id);
##        return R.ok(data);
##    }

    @ApiOperation(value = "根据Id获取详情")
    @GetMapping("/getDetailById")
    public R<${entity}VO> getDetailById(@RequestParam("id") Integer id) {
        ${entity}VO data = ${table.entityPath}Service.getDetailById(id);
        return R.ok(data);
    }

    @ApiOperation(value = "查询列表 分页")
    @GetMapping("/pageList")
    public R<PageResult<${entity}VO>> pageList(${entity}QueryDTO dto, PageWrapper pageWrapper) {
        PageResult<${entity}VO> pageResult = ${table.entityPath}Service.listVO(dto,pageWrapper);
        return R.ok(pageResult);
    }

    @ApiOperation(value = "新增")
    @PostMapping("/add")
    public R add(@Valid @RequestBody ${entity}AddDTO data) {
        return ${table.entityPath}Service.add(data) ? R.ok() : R.error();
    }

    @ApiOperation(value = "修改")
    @PostMapping("/edit")
    public R edit(@Valid @RequestBody ${entity}EditDTO data) {
         return ${table.entityPath}Service.edit(data) ? R.ok() : R.error();
    }

    @ApiOperation(value = "删除")
    @PostMapping("/remove")
    public R remove(@Valid @RequestBody IdDTO dto) {
        return ${table.entityPath}Service.remove(dto.getId()) ? R.ok() : R.error();
    }

    @ApiOperation(value = "批量删除")
    @PostMapping("/batchRemove")
    public R batchRemove(@Valid @RequestBody IdsDTO dto) {
        return ${table.entityPath}Service.remove(dto.getIds()) ? R.ok() : R.error();
    }

}